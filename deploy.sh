#!/bin/bash\n# 🚀 One-Click Deployment Script for Kaggle Content Automation\n# Usage: curl -sL https://raw.githubusercontent.com/anix-lynch/kaggle-content-automation/main/deploy.sh | bash\n\nset -e\n\necho \"🎯 Kaggle Content Automation - One-Click Deployment\"\necho \"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\"\necho \"\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Helper functions\nprint_status() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}[WARNING]${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"${RED}[ERROR]${NC} $1\"\n}\n\n# Check if running on macOS or Linux\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n    OS=\"macOS\"\nelif [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n    OS=\"Linux\"\nelse\n    print_error \"Unsupported operating system: $OSTYPE\"\n    exit 1\nfi\n\nprint_status \"Detected OS: $OS\"\n\n# Step 1: Check Prerequisites\nprint_status \"Checking prerequisites...\"\n\n# Check Python 3\nif command -v python3 &> /dev/null; then\n    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)\n    print_success \"Python 3 found: $PYTHON_VERSION\"\nelse\n    print_error \"Python 3 not found. Please install Python 3.6+ first.\"\n    exit 1\nfi\n\n# Check pip\nif command -v pip3 &> /dev/null; then\n    print_success \"pip3 found\"\nelse\n    print_error \"pip3 not found. Please install pip3 first.\"\n    exit 1\nfi\n\n# Check git\nif command -v git &> /dev/null; then\n    print_success \"Git found\"\nelse\n    print_error \"Git not found. Please install Git first.\"\n    exit 1\nfi\n\n# Step 2: Install Kaggle CLI\nprint_status \"Installing Kaggle CLI...\"\n\nif command -v kaggle &> /dev/null; then\n    print_warning \"Kaggle CLI already installed: $(kaggle --version)\"\nelse\n    # Try pipx first, fall back to pip\n    if command -v pipx &> /dev/null; then\n        print_status \"Installing with pipx...\"\n        pipx install kaggle\n    else\n        print_status \"Installing with pip3...\"\n        pip3 install --user kaggle\n        \n        # Add to PATH if not already there\n        if [[ \":$PATH:\" != *\":$HOME/.local/bin:\"* ]]; then\n            print_status \"Adding ~/.local/bin to PATH\"\n            echo 'export PATH=\"$HOME/.local/bin:$PATH\"' >> ~/.bashrc\n            echo 'export PATH=\"$HOME/.local/bin:$PATH\"' >> ~/.zshrc 2>/dev/null || true\n            export PATH=\"$HOME/.local/bin:$PATH\"\n        fi\n    fi\n    \n    # Verify installation\n    if command -v kaggle &> /dev/null; then\n        print_success \"Kaggle CLI installed: $(kaggle --version)\"\n    else\n        print_error \"Failed to install Kaggle CLI\"\n        exit 1\n    fi\nfi\n\n# Step 3: Clone Repository\nprint_status \"Cloning Kaggle Content Automation repository...\"\n\nREPO_DIR=\"$HOME/kaggle-content-automation\"\nif [[ -d \"$REPO_DIR\" ]]; then\n    print_warning \"Repository already exists at $REPO_DIR\"\n    cd \"$REPO_DIR\"\n    git pull origin main\nelse\n    git clone https://github.com/anix-lynch/kaggle-content-automation.git \"$REPO_DIR\"\n    cd \"$REPO_DIR\"\nfi\n\nprint_success \"Repository ready at $REPO_DIR\"\n\n# Step 4: Setup Directories\nprint_status \"Setting up directories...\"\n\nmkdir -p \"$HOME/.kaggle\"\nmkdir -p \"$HOME/kaggle-workspace\"\nmkdir -p \"$HOME/.mcp-env\"\n\n# Make scripts executable\nchmod +x scripts/*.sh\n\nprint_success \"Directories created and scripts made executable\"\n\n# Step 5: Configuration Setup\nprint_status \"Setting up configuration...\"\n\n# Check if Kaggle credentials exist\nif [[ -f \"$HOME/.kaggle/kaggle.json\" ]]; then\n    print_success \"Kaggle credentials already configured\"\nelse\n    print_warning \"Kaggle credentials not found\"\n    echo \"\"\n    echo \"🔑 Kaggle API Setup Required:\"\n    echo \"1. Go to: https://www.kaggle.com/settings/account\"\n    echo \"2. Scroll to 'API' section\"\n    echo \"3. Click 'Create New API Token'\"\n    echo \"4. Download kaggle.json\"\n    echo \"5. Move it to: $HOME/.kaggle/kaggle.json\"\n    echo \"\"\n    \n    # Interactive setup option\n    read -p \"Do you want to set up credentials now? (y/n): \" -n 1 -r\n    echo\n    if [[ $REPLY =~ ^[Yy]$ ]]; then\n        read -p \"Enter your Kaggle username: \" kaggle_username\n        read -p \"Enter your Kaggle API key: \" kaggle_key\n        \n        # Create kaggle.json\n        cat > \"$HOME/.kaggle/kaggle.json\" << EOF\n{\"username\":\"$kaggle_username\",\"key\":\"$kaggle_key\"}\nEOF\n        chmod 600 \"$HOME/.kaggle/kaggle.json\"\n        print_success \"Kaggle credentials configured\"\n    fi\nfi\n\n# Create example environment file\nif [[ ! -f \"$HOME/.mcp-env/.env\" ]]; then\n    print_status \"Creating example environment file...\"\n    \n    cat > \"$HOME/.mcp-env/.env\" << 'EOF'\n# Kaggle Content Automation Environment\n# Copy your actual values here\n\n# Kaggle API (required)\nKAGGLE_USERNAME=your-kaggle-username\nKAGGLE_KEY=your-kaggle-api-key\n\n# Customization (optional)\nAUTHOR_NAME=\"Your Name\"\nAUTHOR_GITHUB=your-github-username\nBRAND_STYLE=\"your unique approach\"\nDEFAULT_VISIBILITY=false\nEOF\n    \n    print_success \"Example environment file created at $HOME/.mcp-env/.env\"\n    print_warning \"Please edit this file with your actual credentials\"\nfi\n\n# Step 6: Test Installation\nprint_status \"Testing installation...\"\n\n# Test Kaggle CLI\nif kaggle competitions list -p 1 &> /dev/null; then\n    print_success \"Kaggle API connection working!\"\nelse\n    print_warning \"Kaggle API test failed (credentials may need setup)\"\nfi\n\n# Run setup checker\nif [[ -x \"scripts/check_setup.sh\" ]]; then\n    print_status \"Running setup checker...\"\n    ./scripts/check_setup.sh\nfi\n\n# Step 7: Final Instructions\necho \"\"\necho \"🎉 Installation Complete!\"\necho \"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\"\necho \"\"\necho \"📁 Installation Directory: $REPO_DIR\"\necho \"🔑 Credentials: $HOME/.kaggle/kaggle.json\"\necho \"⚙️  Environment: $HOME/.mcp-env/.env\"\necho \"\"\necho \"🚀 Quick Start Commands:\"\necho \"   cd $REPO_DIR\"\necho \"   ./scripts/check_setup.sh                    # Verify installation\"\necho \"   ./scripts/mirror_to_kaggle.sh <github-url> # Mirror GitHub project\"\necho \"   ./scripts/enhance_notebook.sh <kaggle-url> # Enhance existing notebook\"\necho \"\"\necho \"📚 Documentation:\"\necho \"   README.md           # Basic usage guide\"\necho \"   MASS_PRODUCTION.md  # Scaling strategies\"\necho \"   TROUBLESHOOTING.md  # Common issues & solutions\"\necho \"\"\necho \"💡 Next Steps:\"\necho \"1. Edit $HOME/.mcp-env/.env with your credentials\"\necho \"2. Test with: ./scripts/check_setup.sh\"\necho \"3. Try mirroring a public GitHub repo\"\necho \"4. Read MASS_PRODUCTION.md for advanced usage\"\necho \"\"\nprint_success \"Ready to automate your Kaggle workflow!\"\necho \"\"